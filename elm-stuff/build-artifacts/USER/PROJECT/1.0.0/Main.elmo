Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Main",
   $Basics = Elm.Basics.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $Html = Elm.Html.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Mouse = Elm.Mouse.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var view = function (_v0) {
      return function () {
         switch (_v0.ctor)
         {case "_Tuple2":
            return A2($Html.div,
              _L.fromArray([]),
              _L.fromArray([$Html.fromElement($Graphics$Element.show(_v0._0))
                           ,$Html.fromElement($Graphics$Element.show(_v0._1))
                           ,$Html.fromElement($Graphics$Element.show(A2($Basics.atan2,
                           _v0._0,
                           _v0._1)))]));}
         _U.badCase($moduleName,
         "between lines 15 and 20");
      }();
   };
   var main = A2($Signal.map,
   view,
   A2($Signal.map,
   function (_v4) {
      return function () {
         switch (_v4.ctor)
         {case "_Tuple2":
            return {ctor: "_Tuple2"
                   ,_0: $Basics.toFloat(_v4._0)
                   ,_1: $Basics.toFloat(_v4._1)};}
         _U.badCase($moduleName,
         "on line 8, column 37 to 57");
      }();
   },
   $Mouse.position));
   _elm.Main.values = {_op: _op
                      ,main: main
                      ,view: view};
   return _elm.Main.values;
};